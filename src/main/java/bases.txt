//Devolver true si la persona en la fila especificada tiene 18 años o más, y false en caso contrario.
    public static boolean verificarEdad(String[][] matriz, String nombre){
        //return mayorDeEdad;
    } en progreso

    //Devolver "General", "VIP", o "False" según el tipo de entrada de la persona en la fila especificada.
    public static String verificarBoleto(String[][] matriz, String nombre, String edad){
        //String.valueOf(boolean)
        //return tipoEntrada;
    }

    //Verificar que el número de invitados asignados a una persona con entrada "VIP" no exceda el número máximo permitido (2 invitados por persona).
    public static boolean validarInvitados(String[][] matriz, String nombre){
        //return invitadosValidos;
    }

    //Devolver el aforo restante para una sala específica (VIP o General) después de contabilizar a los invitados ya admitidos.
    //iniciar salas?
    public static int aforoDisponible(String[][] matriz, String tipoSala){
        int aforoGeneral = 0;
        int aforoVIP = 0;
        if(tipoSala == "general"){
            for(int i=0;i<matriz.length;i++){
                if(matriz[i][2] == tipoSala){
                    aforoGeneral++;
                }
            }
            return 10 - aforoGeneral;
        } else if (tipoSala == "VIP") {
            for(int i=0;i<matriz.length;i++){
                if(matriz[i][2] == tipoSala){
                    aforoVIP = aforoVIP + Integer.parseInt(matriz[i][3]) + 1;
                }
            }
            return 9 - aforoVIP;
        }
        return 0;
        //quizá hacerlo con matriz saldría más corto? o dividirlos en otro metodo.
        //me falta ver si están ingresados T.T
    }

    //Cambiar el estado de la persona de "Ingresado" de False a True.
    public static String ingresarPersona(String[][] matriz, String nombre){
        //String.valueOf(boolean)
        //return estadoIngreso;
    }

    //Validar si la persona en la fila especificada puede entrar al evento, verificando que cumpla con las siguientes condiciones:
    //Ser mayor de edad.
    //Tener una entrada válida ("General" o "VIP").
    //Verificar que no se exceda el aforo máximo de la sala correspondiente (VIP o General).
    //Si el aforo de la sala correspondiente está completo, debe devolver false, incluso si la persona cumple con los requisitos
    public static boolean permitirEntrada(String[][] matriz, String nombre, boolean mayorDeEdad, String tipoEntrada, boolean invitadosValidos, int aforoDisponible){
        //return entradaPermitida;
    }

    //Permitir eliminar a una persona específica de alguna sala. Si se trata de un VIP, se debe remover en conjunto con el número de invitados que trajo.
    //Se cambia su estado de “Ingresado” de True a False
    public static String removerPersona(String[][] matriz, String nombre){
        //String.valueOf(boolean)
        return "false";
    }